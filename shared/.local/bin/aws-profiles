#!/usr/bin/env bash
# shellcheck shell=bash

### CREDIT ###
# https://github.com/ivours/awsprofile

### USAGE ###
# This script must be SOURCED to work with shell prompts:
#   source aws-profiles
# or
#   . aws-profiles
#
# DO NOT run as: ./aws-profiles (environment variables won't persist)

CREDENTIALS_FILE="$HOME/.aws/credentials"

color_red() { echo "$(tput setaf 1)$1$(tput sgr0)"; }
color_green() { echo "$(tput setaf 2)$1$(tput sgr0)"; }
color_yellow() { echo "$(tput setaf 3)$1$(tput sgr0)"; }
color_blue() { echo "$(tput setaf 4)$1$(tput sgr0)"; }

function list_aws_profiles() {
    COUNT=0
    AWS_PROFILES=$(grep '\[*\]' "$CREDENTIALS_FILE" | cut -d "[" -f2 | cut -d "]" -f1)
    echo -e "$(color_blue "Choose your AWS profile:")\n"
    echo -e "0) $(color_yellow "Clear") current profile"
    echo "$AWS_PROFILES" | while read -r line; do
        ((COUNT++))
        echo "${COUNT}) $line"
    done
}

function set_aws_profile() {
    export AWS_PROFILE=$1

    # Try to get the default region for this profile from AWS config
    local region=""
    if [[ -f "$HOME/.aws/config" ]]; then
        # Look for region in the profile section
        region=$(awk -v profile="$AWS_PROFILE" '
            /^\[profile / { current_profile = gensub(/^\[profile ([^\]]+)\]/, "\\1", 1) }
            /^\[default\]/ { current_profile = "default" }
            /^region = / && current_profile == profile { print gensub(/^region = (.*)/, "\\1", 1); exit }
        ' "$HOME/.aws/config")

        # If not found and profile is not default, try default section
        if [[ -z "$region" && "$AWS_PROFILE" != "default" ]]; then
            region=$(awk '/^\[default\]/{found=1} found && /^region = /{print gensub(/^region = (.*)/, "\\1", 1); exit}' "$HOME/.aws/config")
        fi
    fi

    # Set the region if found
    if [[ -n "$region" ]]; then
        export AWS_REGION="$region"
        echo -e "The AWS profile $(color_green "$AWS_PROFILE") and region $(color_blue "$region") have been set."
    else
        echo -e "The AWS profile $(color_green "$AWS_PROFILE") has been set."
    fi
}

function clear_aws_profile() {
    unset AWS_PROFILE
    unset AWS_REGION
    unset AWS_DEFAULT_REGION
    echo -e "The AWS profile has been $(color_yellow "cleared.")"
}

function select_option() {
    echo -e "\nSelect option number and press [ENTER]: "
    read -r n

    case $n in
    [1-9]*)
        SELECTED_AWS_PROFILE=$(echo "$AWS_PROFILES" | awk "NR==$n{print}")
        set_aws_profile "$SELECTED_AWS_PROFILE"
        ;;
    0)
        clear_aws_profile
        ;;
    esac
}

list_aws_profiles
select_option

# check that the profile is logged in and can make AWS CLI calls
echo "Checking with $(color_blue "AWS CLI...")"
color_green "$(aws sts get-caller-identity | jq -r '.Arn' | cut -d "/" -f2)"
